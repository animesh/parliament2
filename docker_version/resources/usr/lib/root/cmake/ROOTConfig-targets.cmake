# Generated by CMake 3.5.2

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget ROOT::vectorDict ROOT::listDict ROOT::forward_listDict ROOT::dequeDict ROOT::mapDict ROOT::map2Dict ROOT::unordered_mapDict ROOT::multimapDict ROOT::multimap2Dict ROOT::unordered_multimapDict ROOT::setDict ROOT::unordered_setDict ROOT::multisetDict ROOT::unordered_multisetDict ROOT::complexDict ROOT::valarrayDict ROOT::Cling ROOT::MultiProc ROOT::Rint ROOT::Thread ROOT::Imt ROOT::New ROOT::Core ROOT::rmkdepend ROOT::MathCore ROOT::MathMore ROOT::Matrix ROOT::Minuit ROOT::Minuit2 ROOT::Fumili ROOT::Physics ROOT::MLP ROOT::Quadp ROOT::Foam ROOT::Smatrix ROOT::SPlot ROOT::GenVector ROOT::Genetic ROOT::Unuran ROOT::FFTW ROOT::Hist ROOT::HistPainter ROOT::Spectrum ROOT::SpectrumPainter ROOT::Unfold ROOT::Tree ROOT::TreePlayer ROOT::TreeViewer ROOT::RIO ROOT::SQLIO ROOT::XMLIO ROOT::XMLParser ROOT::Net ROOT::RootAuth ROOT::Krb5Auth ROOT::SrvAuth ROOT::rootd ROOT::Netx ROOT::NetxNG ROOT::RHTTP ROOT::Gpad ROOT::Graf ROOT::Postscript ROOT::mathtext ROOT::GX11 ROOT::GX11TTF ROOT::ASImage ROOT::ASImageGui ROOT::GQt ROOT::Graf3d ROOT::X3d ROOT::Eve ROOT::RGL ROOT::GLEW ROOT::FTGL ROOT::Gviz3d ROOT::Gui ROOT::Ged ROOT::FitPanel ROOT::GuiBld ROOT::GuiHtml ROOT::Recorder ROOT::SessionViewer ROOT::QtGSI ROOT::QtRoot ROOT::Proof ROOT::ProofPlayer ROOT::ProofDraw ROOT::ProofBench ROOT::proofd ROOT::XrdProofd ROOT::proofexecv ROOT::Proofx ROOT::pq2 ROOT::Html ROOT::EG ROOT::VMC ROOT::EGPythia8 ROOT::Geom ROOT::GeomBuilder ROOT::GeomPainter ROOT::Gdml ROOT::root ROOT::MemStat ROOT::Table ROOT::rootn.exe ROOT::roots.exe ROOT::ssh2rpd ROOT::xpdtest ROOT::root.exe ROOT::proofserv.exe ROOT::hadd ROOT::rootnb.exe ROOT::rootcling ROOT::PyROOT ROOT::JupyROOT ROOT::TMVA ROOT::TMVAGui ROOT::RooFitCore ROOT::RooFit ROOT::RooStats ROOT::HistFactory ROOT::hist2workspace)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)

# Create imported target ROOT::vectorDict
add_library(ROOT::vectorDict SHARED IMPORTED)

# Create imported target ROOT::listDict
add_library(ROOT::listDict SHARED IMPORTED)

# Create imported target ROOT::forward_listDict
add_library(ROOT::forward_listDict SHARED IMPORTED)

# Create imported target ROOT::dequeDict
add_library(ROOT::dequeDict SHARED IMPORTED)

# Create imported target ROOT::mapDict
add_library(ROOT::mapDict SHARED IMPORTED)

# Create imported target ROOT::map2Dict
add_library(ROOT::map2Dict SHARED IMPORTED)

# Create imported target ROOT::unordered_mapDict
add_library(ROOT::unordered_mapDict SHARED IMPORTED)

# Create imported target ROOT::multimapDict
add_library(ROOT::multimapDict SHARED IMPORTED)

# Create imported target ROOT::multimap2Dict
add_library(ROOT::multimap2Dict SHARED IMPORTED)

# Create imported target ROOT::unordered_multimapDict
add_library(ROOT::unordered_multimapDict SHARED IMPORTED)

# Create imported target ROOT::setDict
add_library(ROOT::setDict SHARED IMPORTED)

# Create imported target ROOT::unordered_setDict
add_library(ROOT::unordered_setDict SHARED IMPORTED)

# Create imported target ROOT::multisetDict
add_library(ROOT::multisetDict SHARED IMPORTED)

# Create imported target ROOT::unordered_multisetDict
add_library(ROOT::unordered_multisetDict SHARED IMPORTED)

# Create imported target ROOT::complexDict
add_library(ROOT::complexDict SHARED IMPORTED)

# Create imported target ROOT::valarrayDict
add_library(ROOT::valarrayDict SHARED IMPORTED)

# Create imported target ROOT::Cling
add_library(ROOT::Cling SHARED IMPORTED)

# Create imported target ROOT::MultiProc
add_library(ROOT::MultiProc SHARED IMPORTED)

# Create imported target ROOT::Rint
add_library(ROOT::Rint SHARED IMPORTED)

# Create imported target ROOT::Thread
add_library(ROOT::Thread SHARED IMPORTED)

# Create imported target ROOT::Imt
add_library(ROOT::Imt SHARED IMPORTED)

# Create imported target ROOT::New
add_library(ROOT::New SHARED IMPORTED)

# Create imported target ROOT::Core
add_library(ROOT::Core SHARED IMPORTED)

# Create imported target ROOT::rmkdepend
add_executable(ROOT::rmkdepend IMPORTED)

# Create imported target ROOT::MathCore
add_library(ROOT::MathCore SHARED IMPORTED)

# Create imported target ROOT::MathMore
add_library(ROOT::MathMore SHARED IMPORTED)

# Create imported target ROOT::Matrix
add_library(ROOT::Matrix SHARED IMPORTED)

# Create imported target ROOT::Minuit
add_library(ROOT::Minuit SHARED IMPORTED)

# Create imported target ROOT::Minuit2
add_library(ROOT::Minuit2 SHARED IMPORTED)

# Create imported target ROOT::Fumili
add_library(ROOT::Fumili SHARED IMPORTED)

# Create imported target ROOT::Physics
add_library(ROOT::Physics SHARED IMPORTED)

# Create imported target ROOT::MLP
add_library(ROOT::MLP SHARED IMPORTED)

# Create imported target ROOT::Quadp
add_library(ROOT::Quadp SHARED IMPORTED)

# Create imported target ROOT::Foam
add_library(ROOT::Foam SHARED IMPORTED)

# Create imported target ROOT::Smatrix
add_library(ROOT::Smatrix SHARED IMPORTED)

# Create imported target ROOT::SPlot
add_library(ROOT::SPlot SHARED IMPORTED)

# Create imported target ROOT::GenVector
add_library(ROOT::GenVector SHARED IMPORTED)

# Create imported target ROOT::Genetic
add_library(ROOT::Genetic SHARED IMPORTED)

# Create imported target ROOT::Unuran
add_library(ROOT::Unuran SHARED IMPORTED)

# Create imported target ROOT::FFTW
add_library(ROOT::FFTW SHARED IMPORTED)

# Create imported target ROOT::Hist
add_library(ROOT::Hist SHARED IMPORTED)

# Create imported target ROOT::HistPainter
add_library(ROOT::HistPainter SHARED IMPORTED)

# Create imported target ROOT::Spectrum
add_library(ROOT::Spectrum SHARED IMPORTED)

# Create imported target ROOT::SpectrumPainter
add_library(ROOT::SpectrumPainter SHARED IMPORTED)

# Create imported target ROOT::Unfold
add_library(ROOT::Unfold SHARED IMPORTED)

# Create imported target ROOT::Tree
add_library(ROOT::Tree SHARED IMPORTED)

# Create imported target ROOT::TreePlayer
add_library(ROOT::TreePlayer SHARED IMPORTED)

# Create imported target ROOT::TreeViewer
add_library(ROOT::TreeViewer SHARED IMPORTED)

# Create imported target ROOT::RIO
add_library(ROOT::RIO SHARED IMPORTED)

# Create imported target ROOT::SQLIO
add_library(ROOT::SQLIO SHARED IMPORTED)

# Create imported target ROOT::XMLIO
add_library(ROOT::XMLIO SHARED IMPORTED)

# Create imported target ROOT::XMLParser
add_library(ROOT::XMLParser SHARED IMPORTED)

# Create imported target ROOT::Net
add_library(ROOT::Net SHARED IMPORTED)

# Create imported target ROOT::RootAuth
add_library(ROOT::RootAuth SHARED IMPORTED)

# Create imported target ROOT::Krb5Auth
add_library(ROOT::Krb5Auth SHARED IMPORTED)

# Create imported target ROOT::SrvAuth
add_library(ROOT::SrvAuth SHARED IMPORTED)

# Create imported target ROOT::rootd
add_executable(ROOT::rootd IMPORTED)

# Create imported target ROOT::Netx
add_library(ROOT::Netx SHARED IMPORTED)

# Create imported target ROOT::NetxNG
add_library(ROOT::NetxNG SHARED IMPORTED)

# Create imported target ROOT::RHTTP
add_library(ROOT::RHTTP SHARED IMPORTED)

# Create imported target ROOT::Gpad
add_library(ROOT::Gpad SHARED IMPORTED)

# Create imported target ROOT::Graf
add_library(ROOT::Graf SHARED IMPORTED)

# Create imported target ROOT::Postscript
add_library(ROOT::Postscript SHARED IMPORTED)

# Create imported target ROOT::mathtext
add_library(ROOT::mathtext STATIC IMPORTED)

# Create imported target ROOT::GX11
add_library(ROOT::GX11 SHARED IMPORTED)

# Create imported target ROOT::GX11TTF
add_library(ROOT::GX11TTF SHARED IMPORTED)

# Create imported target ROOT::ASImage
add_library(ROOT::ASImage SHARED IMPORTED)

# Create imported target ROOT::ASImageGui
add_library(ROOT::ASImageGui SHARED IMPORTED)

# Create imported target ROOT::GQt
add_library(ROOT::GQt SHARED IMPORTED)

# Create imported target ROOT::Graf3d
add_library(ROOT::Graf3d SHARED IMPORTED)

# Create imported target ROOT::X3d
add_library(ROOT::X3d SHARED IMPORTED)

# Create imported target ROOT::Eve
add_library(ROOT::Eve SHARED IMPORTED)

# Create imported target ROOT::RGL
add_library(ROOT::RGL SHARED IMPORTED)

# Create imported target ROOT::GLEW
add_library(ROOT::GLEW SHARED IMPORTED)

# Create imported target ROOT::FTGL
add_library(ROOT::FTGL SHARED IMPORTED)

# Create imported target ROOT::Gviz3d
add_library(ROOT::Gviz3d SHARED IMPORTED)

# Create imported target ROOT::Gui
add_library(ROOT::Gui SHARED IMPORTED)

# Create imported target ROOT::Ged
add_library(ROOT::Ged SHARED IMPORTED)

# Create imported target ROOT::FitPanel
add_library(ROOT::FitPanel SHARED IMPORTED)

# Create imported target ROOT::GuiBld
add_library(ROOT::GuiBld SHARED IMPORTED)

# Create imported target ROOT::GuiHtml
add_library(ROOT::GuiHtml SHARED IMPORTED)

# Create imported target ROOT::Recorder
add_library(ROOT::Recorder SHARED IMPORTED)

# Create imported target ROOT::SessionViewer
add_library(ROOT::SessionViewer SHARED IMPORTED)

# Create imported target ROOT::QtGSI
add_library(ROOT::QtGSI SHARED IMPORTED)

# Create imported target ROOT::QtRoot
add_library(ROOT::QtRoot SHARED IMPORTED)

# Create imported target ROOT::Proof
add_library(ROOT::Proof SHARED IMPORTED)

# Create imported target ROOT::ProofPlayer
add_library(ROOT::ProofPlayer SHARED IMPORTED)

# Create imported target ROOT::ProofDraw
add_library(ROOT::ProofDraw SHARED IMPORTED)

# Create imported target ROOT::ProofBench
add_library(ROOT::ProofBench SHARED IMPORTED)

# Create imported target ROOT::proofd
add_executable(ROOT::proofd IMPORTED)

# Create imported target ROOT::XrdProofd
add_library(ROOT::XrdProofd SHARED IMPORTED)

# Create imported target ROOT::proofexecv
add_executable(ROOT::proofexecv IMPORTED)

# Create imported target ROOT::Proofx
add_library(ROOT::Proofx SHARED IMPORTED)

# Create imported target ROOT::pq2
add_executable(ROOT::pq2 IMPORTED)

# Create imported target ROOT::Html
add_library(ROOT::Html SHARED IMPORTED)

# Create imported target ROOT::EG
add_library(ROOT::EG SHARED IMPORTED)

# Create imported target ROOT::VMC
add_library(ROOT::VMC SHARED IMPORTED)

# Create imported target ROOT::EGPythia8
add_library(ROOT::EGPythia8 SHARED IMPORTED)

# Create imported target ROOT::Geom
add_library(ROOT::Geom SHARED IMPORTED)

# Create imported target ROOT::GeomBuilder
add_library(ROOT::GeomBuilder SHARED IMPORTED)

# Create imported target ROOT::GeomPainter
add_library(ROOT::GeomPainter SHARED IMPORTED)

# Create imported target ROOT::Gdml
add_library(ROOT::Gdml SHARED IMPORTED)

# Create imported target ROOT::root
add_executable(ROOT::root IMPORTED)

# Create imported target ROOT::MemStat
add_library(ROOT::MemStat SHARED IMPORTED)

# Create imported target ROOT::Table
add_library(ROOT::Table SHARED IMPORTED)

# Create imported target ROOT::rootn.exe
add_executable(ROOT::rootn.exe IMPORTED)

# Create imported target ROOT::roots.exe
add_executable(ROOT::roots.exe IMPORTED)

# Create imported target ROOT::ssh2rpd
add_executable(ROOT::ssh2rpd IMPORTED)

# Create imported target ROOT::xpdtest
add_executable(ROOT::xpdtest IMPORTED)

# Create imported target ROOT::root.exe
add_executable(ROOT::root.exe IMPORTED)

# Create imported target ROOT::proofserv.exe
add_executable(ROOT::proofserv.exe IMPORTED)

# Create imported target ROOT::hadd
add_executable(ROOT::hadd IMPORTED)

# Create imported target ROOT::rootnb.exe
add_executable(ROOT::rootnb.exe IMPORTED)

# Create imported target ROOT::rootcling
add_executable(ROOT::rootcling IMPORTED)

# Create imported target ROOT::PyROOT
add_library(ROOT::PyROOT SHARED IMPORTED)

# Create imported target ROOT::JupyROOT
add_library(ROOT::JupyROOT SHARED IMPORTED)

# Create imported target ROOT::TMVA
add_library(ROOT::TMVA SHARED IMPORTED)

# Create imported target ROOT::TMVAGui
add_library(ROOT::TMVAGui SHARED IMPORTED)

# Create imported target ROOT::RooFitCore
add_library(ROOT::RooFitCore SHARED IMPORTED)

# Create imported target ROOT::RooFit
add_library(ROOT::RooFit SHARED IMPORTED)

# Create imported target ROOT::RooStats
add_library(ROOT::RooStats SHARED IMPORTED)

# Create imported target ROOT::HistFactory
add_library(ROOT::HistFactory SHARED IMPORTED)

# Create imported target ROOT::hist2workspace
add_executable(ROOT::hist2workspace IMPORTED)

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/ROOTConfig-targets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
